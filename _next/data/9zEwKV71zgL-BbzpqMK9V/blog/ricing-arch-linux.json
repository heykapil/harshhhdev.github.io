{"pageProps":{"blogData":{"id":"ricing-arch-linux","readingTime":6,"contentHtml":"\n# What is a rice?\n\nNow, the word \"rice\" might remind you of 🍚 -- but what we're going to do today is a bit different from that 😅\n\nThe ricing terminology comes from [cars](https://www.urbandictionary.com/define.php?term=ricing), and it means to soup it up with stickers, etc.\n\nIn the context of computers, ricing means to soup up our system with cool features, and make it look, function, and feel better.\n\n# What you'll be creating\n\n![image](https://user-images.githubusercontent.com/69592270/122867380-651bae00-d2f7-11eb-9795-9fd69199a58c.png)\n\nThere's an endless amount of things you can customise while ricing your desktop.\n\nFor more suggestions, tips, etc -- I suggest taking a look at [r/unixporn](https://www.reddit.com/r/unixporn/).\n\n# Installing packages\n\nI'm assuming you already have Arch Linux installed. If not, get started by following the guide on [Arch Wiki](https://wiki.archlinux.org/title/installation_guide).\n\nSo, we'll need to install a few packages using pacman.\n\nGo to your terminal, and run:\n\n````bash\nsudo pacman -S i3 alacritty lightdm lightdm-gtk-greeter lightdm-gtk-greeter-settings picom feh lxappearance rofi neofetch arandr autotiling flameshot```\n````\n\nIt's a big install, so it might take some time.\n\nNow, we'll need to enable some stuff.\n\n```bash\nsudo systemctl enable lightdm\n```\n\nWith all of these installed, restart your PC.\n\nYou'll see the LightDM GTK Greeter pop up. Click the little button on the top, and make sure to switch your Window Manager to i3.\n\nNow, you should be booted into our i3 Window Manager! Cool!\n\nYou'll see a little dialogue box pop-up at first. Make sure to select \"Yes, generate the config\"\n\nFeel free to choose whichever key you like for the default modifier. Personally, I use the \"Win\" (super) key.\n\nNow, press the modifier + Enter to open a new alacritty terminal instance.\n\nHere, clone my dotfiles to your .config folder\n\n```bash\ncd .config/\n\ngit clone https://github.com/harshhhdev/dotfiles.git/\n```\n\nNow, let's move onto modifying our packages.\n\n# Installing our prompt\n\nNow, you'll see that there's an error already when you open your terminal. This is because our [prompt](https://starship.rs/) hasn't been installed yet.\n\nTo install it, simply run\n\n```bash\nsh -c \"$(curl -fsSL https://starship.rs/install.sh)\"\n```\n\nNow, starship and fish should be working together like a charm!\n\n![image](https://user-images.githubusercontent.com/69592270/122986372-5bcd2880-d36d-11eb-9e4e-8168f5b79cbf.png)\n\n# Installing yay\n\nYay is a frontend for pacman. Basically, allows us to build code from AUR repos.\n\nTo install,\n\n```bash\ncd /opt\n\n# Add sudo for system operation\nsudo git clone https://aur.archlinux.org/yay-git.git\n\n# Replace hostname and user with your hostname and user\nsudo chown -R hostname:user ./yay-git\n\ncd yay-git\n\n# Build the package\nmake pkg -si\n```\n\nAwesome! Now yay should be installed.\n\n# Background\n\nLet's setup a wallpaper with feh.\n\nOpen your i3 config file (.config/i3/config)\n\nNow, inside of here, jump to line 212 where we setup our wallpaper\n\nInside of here, feel free to add the path to the background. If you cloned my dotfiles, you can simply use\n\n```bash\nexec_always feh --bg-fill ~/.config/Background.jpg\n```\n\nand it should work!\n\n# Setting up NeoVim\n\nNext, we'll need to setup our code/text editor: NeoVim.\n\nIf you prefer VSC, go ahead and install it with\n\n```bash\nsudo pacman -S code\n\n# Remove NeoVim (optional)\nsudo pacman -Rns neovim\n```\n\nNow, let's install NeoVim.\n\nWe will need to use NeoVim v5 for our setup. As I talk, NeoVim v5 is not stable, and therefore, we'll have to download a nightly version.\n\nUsing yay, we can type in\n\n```bash\nyay -S neovim-nightly-bin\n```\n\nWith this, NeoVim should be installed.\n\nWe'll be using packer to install our packages.\n\nMake sure to clone the package repository somewhere to your packpath, e.g.:\n\n```bash\ngit clone https://github.com/wbthomason/packer.nvim\\\n ~/.local/share/nvim/site/pack/packer/start/packer.nvim\n```\n\nNow, open up NeoVim using the nvim command.\n\nYou'll see a bunch of errors. Don't worry -- that's expected. Type in :PackerInstall and your packages should install just fine.\n\nNow, NeoVim should be working and ready to go!\n\n![image](https://user-images.githubusercontent.com/69592270/122986450-77d0ca00-d36d-11eb-8f59-964e70e7c4e8.png)\n\nI am using LunarVim, made by [ChrisAtMachine](https://www.youtube.com/channel/UCS97tchJDq17Qms3cux8wcA). I suggest you check out his [GitHub repo](https://github.com/ChristianChiarulli/LunarVim) for more instructions if you're puzzled.\n\n# Monitor Setup\n\nFor this, we'll need arandr to visually setup our monitors.\n\nUsing arandr's visual GUI, you can customise your monitor layout to your needs.\n\n![image](https://user-images.githubusercontent.com/69592270/122986497-86b77c80-d36d-11eb-9ee0-a5846cb8dec0.png)\n\nAfter you're done, click on Layout > Save As and save it to your .screenlayout directory.\n\nNow, open the .screenlayout/config.sh file\n\n```bash\nnvim .screenlayout/config.sh\n\n# If using Visual Studio Code\ncode .screenlayout/config.sh\n```\n\nCopy the contents (don't copy the comment up top)\n\nNow, go back to your config file. Go to line 217 where we setup xrandr.\n\nAdd in the what you copied from the config.sh file, and add an exec_always infront letting i3 know to execute this on startup.\n\n# Polybar\n\nFinally, we'll have to setup our Polybar.\n\nNow, this might take a bit of time.\n\nLet's install polybar using yay\n\n```bash\nyay -S polybar-git\n```\n\nNow, let's open our file using NeoVim.\n\n```bash\nnvim ~/.config/polybar/forest/modules.bash\n\n# Visual Studio Code\ncode ~/.config/polybar/forest/\n# Open the modules file using the GUI\n```\n\nHere, go down to [module/weather](https://github.com/harshhhdev/dotfiles/blob/master/polybar/forest/modules.bash#L1093).\n\nYou'll need to go to [openeathermap](https://openweathermap.org/) and register yourself, and get an API key.\n\nThen, you'll need to get a city code of your city, or a city near you.\n\nGo back to the polybar config file, and fill in the info.\n\n```ini\n; Imagine using imperial units :p\nexec = ~/.config/polybar/forest/scripts/weather.py --api=YOUR-API-KEY --city=CITY-CODE --units=metric\n\nlabel = Your City Name %output%\n```\n\nNext, you'll need to setup the battery.\n\nAs stated in the comment, run ls -1 /sys/class/power_supply/ to get input for the fields.\n\n```ini\n; Use the following command to list batteries and adapters:\n; $ ls -1 /sys/class/power_supply/\nbattery = BAT1\nadapter = ACAD\n```\n\nNext, we'll need to setup our network\n\nFind the [module/wireless-network](https://github.com/harshhhdev/dotfiles/blob/92ec0c19a9e4613d9ed485ce7a9b19d605decca1/polybar/forest/modules.bash#L756)\n\nI'm using wireless, so I'll have to go and get find which interface I'm using.\n\nThis differs for people, so make sure to set this up correctly if it shows as blank.\n\n# Fonts, and GTK themes setup\n\nNow, time to setup fonts, etc. for our system and other GTK apps.\n\nFor this, we'll be using the [Barlow](https://fonts.google.com/specimen/Barlow) and [JetBrains Mono](https://www.jetbrains.com/lp/mono/) font.\n\nGo ahead and download both the fonts, and select [Barlow Medium](https://fonts.google.com/specimen/Barlow) as your default font.\n\nNow, I'll drop links to the icon themes. Download them to a folder, then use the install feature given by lxappearance to bring in the themes.\n\n[BigSur Icon Theme](https://www.gnome-look.org/s/Gnome/p/1405756)\n[MacOS BigSur Cursor](https://www.gnome-look.org/p/1408466/)\n[MacOS Dark Theme](https://www.gnome-look.org/p/1431904/)\n\n# Emoji Picker\n\nNow, we'll need to use our little emoji picker.\n\nGo and clone the [rofiemoji](https://github.com/nkoehring/rofiemoji) repo\n\n```bash\ngit clone https://github.com/nkoehring/rofiemoji.git\n```\n\nGo into [line 168](https://github.com/harshhhdev/dotfiles/blob/master/i3/config#L168) in your i3 config file, and add in the location of your rofiemoji.sh file.\n\nIf you'd like to setup Apple Emojis in your Linux, feel free to check out my [previous post](https://harshhhdev.github.io/blog/apple-emojis-linux).\n\n# Finishing Note\n\nAnd, that's about it! That's all you need to get started with my dotfiles setup on your Arch Linux. If there are any problems, feel free to comment below. I'll respond to each and every one of them with thought :)\n\nIf this helped you, I'd really appreciate a star on my [dotfiles repo](https://github.com/harshhhdev/dotfiles).\n","title":"Ricing Arch Linux","date":"2021-06-22","formattedDate":"22 June, 2021","description":"This is a guide for ricing your Arch Linux desktops. We will be going over how you can use and customise by dotfiles to make the computer setup of your dreams."}},"__N_SSG":true}